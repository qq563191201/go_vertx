<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">

	<context:annotation-config />
	<!-- 组件扫描 -->
	<context:component-scan base-package="com.gtshgame.db.dao" />
	<context:component-scan base-package="com.gtshgame.service.impl" />

	<!-- 引用配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
    	<list>
		<value>classpath:sqlserver-jdbc-connection.properties</value>
		</list>     
		</property>    
	</bean>
	<!-- 2.配置数据源 -->  
	<bean id="dataSourceHoutai" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">  
		<property name="uniqueResourceName" value="${houtai.uniqueResourceName}"/>  
		<property name="xaDataSourceClassName" value="${jdbc.driverClassName}"/>  
		<property name="xaProperties">  
			<props>  
				<prop key="url">${jdbc.url}</prop>  
				<prop key="user">${jdbc.username}</prop>  
				<prop key="password">${jdbc.password}</prop>  
			</props>  
		</property>  
		<property name="minPoolSize" value="${houtai.minPoolSize}" />  
		<property name="maxPoolSize" value="${houtai.maxPoolSize}" />  
		<property name="borrowConnectionTimeout" value="${houtai.borrowConnectionTimeout}" />  
		<property name="testQuery" value="${houtai.testQuery}" />  
		<property name="maintenanceInterval" value="${houtai.maintenanceInterval}" />  
	</bean> 
	
	<bean id="dataSourceActivity" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">  
		<property name="uniqueResourceName" value="${activity.uniqueResourceName}"/>  
		<property name="xaDataSourceClassName" value="${jdbc.driverClassName}"/>  
		<property name="xaProperties">  
			<props>  
				<prop key="url">${jdbc2.url}</prop>
                <prop key="user">${jdbc2.username}</prop>
                <prop key="password">${jdbc2.password}</prop>
			</props>  
		</property>  
		<property name="minPoolSize" value="${activity.minPoolSize}" />  
		<property name="maxPoolSize" value="${activity.maxPoolSize}" />  
		<property name="borrowConnectionTimeout" value="${activity.borrowConnectionTimeout}" />  
		<property name="testQuery" value="${activity.testQuery}" />  
		<property name="maintenanceInterval" value="${activity.maintenanceInterval}" />  
	</bean> 

	<!-- 3.sqlsessionFactory -->
	<bean id="houtaiSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation">
			<value>classpath:mybatis/mybatis-houtai-config.xml</value>
		</property>
		<property name="dataSource">
			<ref bean="dataSourceHoutai" />
		</property>
	</bean>
	<bean id="houtaiSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg ref="houtaiSqlSessionFactory" />
	</bean>
	  
	<bean id="activitySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="mapperLocations" value="classpath*:com/gtshgame/db/mapping/*.xml" />
		<property name="dataSource">
			<ref bean="dataSourceActivity" />
		</property>
	</bean>
	<bean id="activitySqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg ref="activitySqlSessionFactory" />
	</bean>
	  
	<!-- 4.事务管理器配置 -->
	<!-- 分布式事务 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" 
		init-method="init" destroy-method="close">   
		<property name="forceShutdown" value="true"/>   
	</bean>   
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">   
		<property name="transactionTimeout" value="${transaction.timeout}"/>   
	</bean>  
	  
	<!-- JTA事务管理器 -->   
	<bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">   
		<property name="transactionManager" ref="atomikosTransactionManager"/>   
		<property name="userTransaction"    ref="atomikosUserTransaction"/>   
	</bean> 
	
	<!-- 基于注解的声明式事务 --> 
	<tx:annotation-driven transaction-manager="springTransactionManager" />
</beans>
